from rsf.proj import *
from rsf.recipes.beg import server

for d in (1,2):
    data = 'data%d' % d
    Fetch(data+'.rsf','fwi',server)
    Result(data,'grey title="Data %d" ' % d)
    
    # mute direct arrivals
    mute = 'mute%d' % d
    Flow(mute,data,'mutter x0=4.7 half=n t0=0.1 v0=1.25 tp=0.7')
    Result(mute,'grey title="Data %d" ' % d)

    # subsample for efficiency
    subs = 'subs%d' % d
    Flow(subs,mute,'window j2=10')

    # select one trace
    trace = 'trace%d' % d
    Flow(trace,mute,'window n2=1 f2=920 ')

# Local similarity scan
#######################

g0=0.95  # starting change 
g1=2-g0  # last change
ng=101   # number of changes to scan
dg = (g1-g0)/(ng-1)
niter = 100 # maximum number of iterations

# Apply to one trace first to test parameters

# Scan shifts computing local similarity
Flow('scan','trace2 trace1',
     '''
     warpscan other=${SOURCES[1]} niter=%d
     ng=%d g0=%g dg=%g rect1=50 
     ''' % (niter,ng,g0,dg))
Plot('scan',
     '''
     grey wanttitle=n allpos=y color=j 
     label1="Time" unit1=s label2="Relative stretch"
     ''')

# Pick the stretch
Flow('pick','scan','pick rect1=50 vel0=1')
Plot('pick',
     '''
     graph transp=y min2=%g max2=%g 
     yreverse=y plotcol=7 plotfat=5 
     wantaxis=n wanttitle=n pad=n
     ''' % (g0,g1))
Result('scan','scan pick','Overlay')

# Convert stretch to shift
Flow('shift','pick','math output="(input-1)*x1" ')

# Apply the stretch
Flow('warp','trace2 trace1 shift',
     '''
     warp1 other=${SOURCES[1]} warpin=${SOURCES[2]}
     verb=1 nliter=0 
     ''')

# Take difference
Flow('diff1','trace1 trace2','add scale=-1,1 ${SOURCES[1]}')
Flow('diff2','trace1 warp', 'add scale=-1,1 ${SOURCES[1]}')

# Display data before after warping

Result('before','trace1 trace2 diff1',
       '''
       cat axis=2 ${SOURCES[1:3]} |
       dots labels="Data 1:Data 2:Difference" 
       yreverse=y gaineach=n 
       ''')

Result('after','trace1 warp diff2',
       '''
       cat axis=2 ${SOURCES[1:3]} |
       dots labels="Data 1:Data 2:Difference" 
       yreverse=y gaineach=n 
       ''')



# Now do the whole gather
#########################

# Scan shifts computing local similarity
Flow('scan2','subs2 subs1',
     '''
     warpscan other=${SOURCES[1]} niter=%d
     ng=%d g0=%g dg=%g rect1=50 rect3=5
     ''' % (niter,ng,g0,dg))

Result('scan2',
       '''
       byte allpos=y gainpanel=all | transp plane=23 memsize=5000 |
       grey3 color=j frame1=2000 frame2=100 frame3=50 flat=n
       point1=0.6 point2=0.6 wanttitle=n label3=Stretch unit3=
       ''')

# Pick the stretch
Flow('pick2','scan2','pick rect1=50 rect2=5 vel0=1 | transp | remap1 n1=1841 d1=0.005 | transp')

# Convert stretch to shift
Flow('shift2','pick2','math output="(input-1)*x1" | put label=Shift unit=s')

Result('shift2','grey color=j allpos=y scalebar=y title="Time Shift" ')

# Apply the stretch
Flow('warp2','mute2 mute1 shift2',
     '''
     warp1 other=${SOURCES[1]} warpin=${SOURCES[2]}
     verb=1 nliter=0 
     ''')

# Take difference
Flow('before2','mute1 mute2','add scale=-1,1 ${SOURCES[1]}')
Flow('after2', 'mute1 warp2','add scale=-1,1 ${SOURCES[1]}')

# Display data before after warping

Result('before2','grey clip=0.000188418 title="Difference Before" ')
Result('after2', 'grey clip=0.000188418 title="Difference After"  ')


End()
